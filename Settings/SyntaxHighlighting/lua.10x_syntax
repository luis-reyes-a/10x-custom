# Format: <SettingName>: <Settingvalue>
# Setting name must appear at start of line and there must be whitespace after the colon.
# Multiple values can be comma separated or on subsequent lines.
#
# Valid settings for colour rules:
# REGEX()   A regular expression. Colours entire match or first group.
# WORD()	Matches a word (case sensitive)
# WORDI()   Matches a word (case insensitive)
# TEXT()	Match any text in the line (case sensitive)
# TEXTI()	Match any text in the line (case insensitive)

#----------------------------------------------
# settings

Extensions:					.lua

BlockCommentStart:			--[[
BlockCommentEnd:			--]]

#----------------------------------------------
# colour rules

Language.Comment:
REGEX(--.*)

Language.String:
REGEX("[^"\\]*(?:\\.[^"\\]*)*")
REGEX('[^'\\]*(?:\\.[^'\\]*)*')

Language.Number:
REGEX([0-9]+)
REGEX([0-9]+\.[0-9]*)
REGEX(\b0[xX][a-fA-F0-9]+\b)

Language.Brace:
TEXT({)
TEXT(})

Language.Bracket:
TEXT(()
TEXT())

Language.SquareBracket:
TEXT([)
TEXT(])

Language.SemiColon:
TEXT(;)

Language.Comma:
TEXT(,)

Language.Keyword:
WORD(and)
WORD(break)
WORD(do)
WORD(else)
WORD(elseif)
WORD(end)
WORD(false)
WORD(for)
WORD(function)
WORD(if)
WORD(in)
WORD(local)
WORD(nil)
WORD(not)
WORD(or)
WORD(repeat)
WORD(return)
WORD(them)
WORD(true)
WORD(until)
WORD(while)

Language.Operator:
TEXT(.)
TEXT(:)
TEXT(-)
TEXT(>)
TEXT(=)
TEXT(+)
TEXT(-)
TEXT(*)
TEXT(/)
TEXT(%)
TEXT(<)
TEXT(>)
TEXT(.)
TEXT(!)
TEXT(|)
TEXT(&)
TEXT(:)
TEXT(~)
TEXT(^)
TEXT(#)

Language.Function:
REGEX(\bfunction\s+([a-zA-Z_]+\w*))
REGEX(\b([a-zA-Z_]+\w*)\()

Language.Variable:
REGEX(\b[a-zA-Z_]+\w*\b)
