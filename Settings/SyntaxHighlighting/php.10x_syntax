# Format: <SettingName>: <Settingvalue>
# Setting name must appear at start of line and there must be whitespace after the colon.
# Setting name must appear at start of line and there must be whitespace after the colon.
#
# Valid settings for colour rules:
# REGEX()   A regular expression. Colours entire match or first group.
# WORD()	Matches a word (case sensitive)
# WORDI()   Matches a word (case insensitive)
# TEXT()	Match any text in the line (case sensitive)
# TEXTI()	Match any text in the line (case insensitive)

#----------------------------------------------
# settings

Extensions:					.php

#----------------------------------------------
# colour rules

Language.Comment:
REGEX(//.*)

Language.String:
REGEX("[^"\\]*(?:\\.[^"\\]*)*")
REGEX('[^'\\]*(?:\\.[^'\\]*)*')

Language.Number:
REGEX((0[xX][a-zA-Z0-9]+))
REGEX((0[bB][0-9]+))
REGEX([0-9]+[fd]*[uUlLzZfFdD]*)
REGEX([0-9]+\.[0-9]*[fd]*[uUlLzZfFdD]*)
REGEX([0-9]*\.[0-9]+[fd]*[uUlLzZfFdD]*)

Language.Brace:
TEXT({)
TEXT(})

Language.Bracket:
TEXT(()
TEXT())

Language.SquareBracket:
TEXT([)
TEXT(])

Language.Namespace:
REGEX(\s*use\s+(.*))

Language.Keyword:
WORD(__halt_compiler())
WORD(abstract)
WORD(and)
WORD(array())
WORD(as)
WORD(break)
WORD(callable)
WORD(case)
WORD(catch)
WORD(class)
WORD(clone)
WORD(const)
WORD(continue)
WORD(declare)
WORD(default)
WORD(die())
WORD(do)
WORD(echo)
WORD(else)
WORD(elseif)
WORD(empty())
WORD(enddeclare)
WORD(endfor)
WORD(endforeach)
WORD(endif)
WORD(endswitch)
WORD(endwhile)
WORD(eval())
WORD(exit())
WORD(extends)
WORD(final)
WORD(finally)
WORD(fn)
WORD(for)
WORD(foreach)
WORD(function)
WORD(global)
WORD(goto)
WORD(if)
WORD(implements)
WORD(include)
WORD(include_once)
WORD(instanceof)
WORD(insteadof)
WORD(interface)
WORD(isset())
WORD(list())
WORD(match)
WORD(namespace)
WORD(new)
WORD(or)
WORD(print)
WORD(private)
WORD(protected)
WORD(public)
WORD(readonly)
WORD(require)
WORD(require_once)
WORD(return)
WORD(static)
WORD(switch)
WORD(throw)
WORD(trait)
WORD(try)
WORD(unset())
WORD(use)
WORD(var)
WORD(while)
WORD(xor)
WORD(yield)
WORD(Exception)

Language.Preprocessor:
TEXT(<?php)
TEXT(?>)

Language.Operator:
TEXT(.)
TEXT(:)
TEXT(-)
TEXT(>)
TEXT(=)
TEXT(+)
TEXT(-)
TEXT(*)
TEXT(/)
TEXT(%)
TEXT(<)
TEXT(>)
TEXT(.)
TEXT(!)
TEXT(|)
TEXT(&)
TEXT(:)
TEXT(~)
TEXT(?)
TEXT(^)

Language.Function:
REGEX(\b([a-zA-Z_]+\w*)\()

Language.Class:
REGEX(\b([a-zA-Z_]+\w*)\.[a-zA-Z_]+\w*)

Language.Namespace:
REGEX(import\s+([a-zA-Z_]+\w*))
REGEX(from\s+([a-zA-Z_]+\w*)\s+import)

Language.Variable:
REGEX(\$[a-zA-Z_]+\w*\b)
REGEX(\b([a-zA-Z_]+\w*)\b)

